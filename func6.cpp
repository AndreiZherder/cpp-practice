/*Проверьте, принадлежит ли точка данной закрашенной области.
На рисунке изображён участок плоскости разлинованной в клетку с шагом 1.
Жирными линиями выделены оси координат совпадающие с линиями сетки в самом её центре.
Так же на рисунке обозначены жирными линиями: окружность радиусом  2 и с центром в точке с координатами (-1,1) и две прямые.
Одна прямая проходит через точки с координатами (-1,0) и (0,2) и пересекает окружность.
Вторая прямая проход через точки с координатами (0,0) и (-1,1), то есть она проходит через центр окружности и наклонена под 45 градусов к отрицательному направлению оси Х!
Точка пересечения прямых лежит внутри окружности.

Теперь описание двух заштрихованных областей, образованных пересечением перечисленных ранее окружностью и двумя прямыми.
Первая заштрихованная область заключена внутри окружности и ограничена снизу двумя пересекающимися прямыми.
Другими словами, эта область ограничена сверху окружностью, а снизу двумя прямыми.
Вторая заштрихованная область находится ниже окружности (под окружностью), по бокам ограничена двумя прямыми и простирается вниз до бесконечности.
Другими словами, это область лежащая под пересекающимися прямыми и под окружностью, но точка пересечения самих прямых в неё не попадает,
потому что она отсекается нижней дугой окружности.

Уточнение: закрашенная область включает свои границы (пограничные линии)!

Если точка принадлежит области (область включает границы), выведите слово YES, иначе выведите слово NO.
Решение должно содержать функцию IsPointInArea(x, y), возвращающую True, если точка принадлежит области и False, если не принадлежит.
Основная программа должна считать координаты точки, вызвать функцию IsPointInArea и в зависимости от возвращенного значения вывести на экран необходимое сообщение.
Функция IsPointInArea не должна содержать инструкцию if.
Формат входных данных
Вводятся два действительных числа.
Формат выходных данных
Выведите ответ на задачу.
Sample Input 1:

-4
-4
Sample Output 1:

NO
Sample Input 2:

-4
-3
Sample Output 2:

NO
*/

#include <iostream>
#include <cmath>
using namespace std;
bool IsPointInCircle(double x, double y, double xc, double yc, double r){
    return sqrt((x - xc) * (x - xc) + (y - yc) * (y - yc)) <= r;
}
bool IsPointInCircleExcludingLine(double x, double y, double xc, double yc, double r){
    return sqrt((x - xc) * (x - xc) + (y - yc) * (y - yc)) < r;
}
bool IsPointInArea(double x, double y){
    return ((y >= -x) && (y >= 2 * x + 2) && IsPointInCircle(x, y, -1, 1, 2)) || ((y <= 2 * x + 2) && (y <= -x) && !IsPointInCircleExcludingLine(x, y, -1, 1, 2));
}
int main(){
    double x, y;
    cin >> x >> y;
    if (IsPointInArea(x, y)){
        cout << "YES";
    } else {
        cout << "NO";
    }
return 0;
}